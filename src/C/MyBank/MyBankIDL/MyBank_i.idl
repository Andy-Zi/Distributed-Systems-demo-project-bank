[
    uuid(2954C661-5F60-4E65-BDC1-2838538F6428),
    version(1.0),
    pointer_default(unique)
]

interface MyBank_i
{
    error_status_t is_connected([out] long* connected);
    /*
    a) 1) login(in username, in password, out token)    
    Username: The Username of the User [string]    
    Password: The Password of the User [string]    
    Token: The Token of the User [Hex-String]
    (Last Digit represents the User-Type)
    0: User
    1: Admin    
    */
    error_status_t login( [in, string] char* username,
                [in, string] char* password,
                [out] long *token,
                [out, string] char **res
                );
    /*
    b 1) (Admin only) newaccount(in token, in username, in description, out account_number)     
    Token: The Token of the User making the request[Hex-String]    
    Username: The Name of the User to Create a new Account for [string]    
    Description: The Description of the Account [string]    
    Account_Number: The Account Number of the new Account [string (GUID)]    
    */
    error_status_t newaccount( [in] long token,
                    [in, string] char* username,
                    [in, string] char* description,
                    [out] long* account_number,
                    [out, string] char** res
                    );
    /*
    b 2) (Admin only) newuser(in token, in username, in password)    
    Token: The Token of the User making the request[Hex-String]    
    Username: The Name of the User to Create [string]    
    Password: The Password of the User to Create [string]    
    */
    error_status_t newuser(   [in] long token,
                    [in, string] char* username,
                    [in, string] char* password,
                    [out, string] char** res
                    );
    /*
    c) listaccounts(in token, out (Account_Number,Description))    
    Token: The Token of the User making the request[Hex-String]    
    Account_Number,Description: A List of all Account_Numbers and Desciptions accessible by this User [(string,string)[]]    
    ## d) (Admin only) payinto(in token, in account_number, in amount)    
    Token: The Token of the User making the request[Hex-String]    
    Account_Number: The Account Number of the Account to pay into [string (GUID)]    
    Amount: The Amount to pay into the Account [float]    
    */
    error_status_t listaccounts([in] long token,
                      [out,string] char** listaccount,
                      [out, string] char** res
                      );
    
    /*
    d) (Admin only) payinto(in token, in account_number, in amount)
    Token: The Token of the User making the request[Hex - String]
    Account_Number : The Account Number of the Account to pay into[string (GUID)]
    Amount : The Amount to pay into the Account[float]
    */
    error_status_t payinto([in] long token,
                    [in] long account_number, 
                    [in] float amount,
                    [out, string] char** res
                    );
    
    
    /*
    e) transfer(in token, in from_account_number, in to_account_number, in amount, in comment)    
    Token: The Token of the User making the request[Hex-String]    
    From_Account_Number: The Account Number of the Account to pay from [string (GUID)]    
    To_Account_Number: The Account Number of the Account to pay into [string (GUID)]
    Amount: The Amount to pay into the Account [float]    
    Comment: The Comment to add to the Transaction [string]
    */
    error_status_t transfer([in] long token,
                    [in] long from_account_number,
                    [in] long to_account_number,
                    [in, string] char* receiver_name,
                    [in] float amount,
                    [in, string] char* comment,
                    [out, string] char** res
                    );
    /*
    f) statement (in token, in [optional] account_number,in [optional] detailed , out accounts)    
    Token: The Token of the User making the request[Hex-String]   
    Account_Number: The Account Number of the Account to get the Statement for [string (GUID)]   
    Detailed: If set to true, the Statement will include all Transactions, otherwise none [boolean]   
    Accounts: A List of all Accounts or the given Account accessible by this User [Account-Object[]]
    */
    error_status_t statement([in] long token,
                    [in] long account_number,  //option
                    [in] long detailed,               //option
                    [out,string] char** statement_out,
                    [out, string] char** res
                    );
    /*
    g) bye(in token)
    Token: The Token of the User making the request[Hex-String]
    */
    error_status_t bye([in] long token,
                    [out, string] char** res
                    );
}
