//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyBank.WCFConnector.WCFConnectedBankService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFConnectedBankService.IWCFBankService")]
    public interface IWCFBankService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/Login", ReplyAction="http://tempuri.org/IWCFBankService/LoginResponse")]
        string Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/Login", ReplyAction="http://tempuri.org/IWCFBankService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/NewUser", ReplyAction="http://tempuri.org/IWCFBankService/NewUserResponse")]
        void NewUser(string token, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/NewUser", ReplyAction="http://tempuri.org/IWCFBankService/NewUserResponse")]
        System.Threading.Tasks.Task NewUserAsync(string token, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/NewAccount", ReplyAction="http://tempuri.org/IWCFBankService/NewAccountResponse")]
        string NewAccount(string token, string username, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/NewAccount", ReplyAction="http://tempuri.org/IWCFBankService/NewAccountResponse")]
        System.Threading.Tasks.Task<string> NewAccountAsync(string token, string username, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/ListAccounts", ReplyAction="http://tempuri.org/IWCFBankService/ListAccountsResponse")]
        System.ValueTuple<string, string>[] ListAccounts(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/ListAccounts", ReplyAction="http://tempuri.org/IWCFBankService/ListAccountsResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<string, string>[]> ListAccountsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/PayInto", ReplyAction="http://tempuri.org/IWCFBankService/PayIntoResponse")]
        void PayInto(string token, string accountNumber, float amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/PayInto", ReplyAction="http://tempuri.org/IWCFBankService/PayIntoResponse")]
        System.Threading.Tasks.Task PayIntoAsync(string token, string accountNumber, float amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/Transfere", ReplyAction="http://tempuri.org/IWCFBankService/TransfereResponse")]
        void Transfere(string token, string from_accountNumber, string to_accountNumber, float amount, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/Transfere", ReplyAction="http://tempuri.org/IWCFBankService/TransfereResponse")]
        System.Threading.Tasks.Task TransfereAsync(string token, string from_accountNumber, string to_accountNumber, float amount, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/Statement", ReplyAction="http://tempuri.org/IWCFBankService/StatementResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ValueTuple<string, string>[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.ValueTuple<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] Statement(string token, string account_number, bool detailed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/Statement", ReplyAction="http://tempuri.org/IWCFBankService/StatementResponse")]
        System.Threading.Tasks.Task<object[]> StatementAsync(string token, string account_number, bool detailed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/Bye", ReplyAction="http://tempuri.org/IWCFBankService/ByeResponse")]
        void Bye(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBankService/Bye", ReplyAction="http://tempuri.org/IWCFBankService/ByeResponse")]
        System.Threading.Tasks.Task ByeAsync(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFBankServiceChannel : MyBank.WCFConnector.WCFConnectedBankService.IWCFBankService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFBankServiceClient : System.ServiceModel.ClientBase<MyBank.WCFConnector.WCFConnectedBankService.IWCFBankService>, MyBank.WCFConnector.WCFConnectedBankService.IWCFBankService {
        
        public WCFBankServiceClient() {
        }
        
        public WCFBankServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFBankServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFBankServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFBankServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public void NewUser(string token, string username, string password) {
            base.Channel.NewUser(token, username, password);
        }
        
        public System.Threading.Tasks.Task NewUserAsync(string token, string username, string password) {
            return base.Channel.NewUserAsync(token, username, password);
        }
        
        public string NewAccount(string token, string username, string description) {
            return base.Channel.NewAccount(token, username, description);
        }
        
        public System.Threading.Tasks.Task<string> NewAccountAsync(string token, string username, string description) {
            return base.Channel.NewAccountAsync(token, username, description);
        }
        
        public System.ValueTuple<string, string>[] ListAccounts(string token) {
            return base.Channel.ListAccounts(token);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<string, string>[]> ListAccountsAsync(string token) {
            return base.Channel.ListAccountsAsync(token);
        }
        
        public void PayInto(string token, string accountNumber, float amount) {
            base.Channel.PayInto(token, accountNumber, amount);
        }
        
        public System.Threading.Tasks.Task PayIntoAsync(string token, string accountNumber, float amount) {
            return base.Channel.PayIntoAsync(token, accountNumber, amount);
        }
        
        public void Transfere(string token, string from_accountNumber, string to_accountNumber, float amount, string comment) {
            base.Channel.Transfere(token, from_accountNumber, to_accountNumber, amount, comment);
        }
        
        public System.Threading.Tasks.Task TransfereAsync(string token, string from_accountNumber, string to_accountNumber, float amount, string comment) {
            return base.Channel.TransfereAsync(token, from_accountNumber, to_accountNumber, amount, comment);
        }
        
        public object[] Statement(string token, string account_number, bool detailed) {
            return base.Channel.Statement(token, account_number, detailed);
        }
        
        public System.Threading.Tasks.Task<object[]> StatementAsync(string token, string account_number, bool detailed) {
            return base.Channel.StatementAsync(token, account_number, detailed);
        }
        
        public void Bye(string token) {
            base.Channel.Bye(token);
        }
        
        public System.Threading.Tasks.Task ByeAsync(string token) {
            return base.Channel.ByeAsync(token);
        }
    }
}
